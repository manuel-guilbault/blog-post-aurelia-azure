{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "metadata": {
        "description": "The name of your proxy webapp."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[uniquestring('manuelguilbault.com', 'aurelia-azure', resourceGroup().id, 'storage')]",
      "metadata": {
        "description": "The name of the Storage account."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS"
      ],
      "metadata": {
        "description": "The type of Storage account."
      }
    },
    "blobContainerName": {
      "type": "string",
      "defaultValue": "web-app-content",
      "metadata": {
        "description": "The name of the Storage blob container where the web app is stored."
      }
    },
    "domain": {
      "type": "string",
      "metadata": {
        "description": "The custom domain to bind the webapp to."
      }
    },
    "letsEncryptTenant": {
      "type": "string",
      "metadata": {
        "description": "The Azure Active Directory tenant for Let's Encrypt extension."
      }
    },
    "letsEncryptClientId": {
      "type": "string",
      "metadata": {
        "description": "The Azure Active Directory app id for Let's Encrypt extension."
      }
    },
    "letsEncryptClientSecret": {
      "type": "string",
      "metadata": {
        "description": "The Azure Active Directory app secret for Let's Encrypt extension."
      }
    }
  },
  "variables": {
    "tenant": "[parameters('tenant')]",
    "functionAppName": "[parameters('appName')]",
    "hostingPlanName": "[parameters('appName')]",
    "storageAccountName": "[parameters('storageAccountName')]",
    "storageAccountType": "[parameters('storageAccountType')]",
    "blobContainerName": "[parameters('blobContainerName')]",
    "domain": "[parameters('domain')]",
    "letsEncryptTenant": "[parameters('letsEncryptTenant')]",
    "letsEncryptClientId": "[parameters('letsEncryptClientId')]",
    "letsEncryptClientSecret": "[parameters('letsEncryptClientSecret')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "kind": "Storage",
      "sku": {
        "name": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-04-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "computeMode": "Dynamic",
        "sku": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2015-08-01",
      "name": "[variables('functionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~1"
            },
            {
              "metadata": {
                "comment": "This will enable proxy functions. See https://github.com/Azure/Azure-Functions/issues/356"
              },
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~0.2"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "6.5.0"
            },
            {
              "name": "Storage.HostAndContainer",
              "value": "[concat(variables('storageAccountName'), '.blob.core.windows.net/', variables('blobContainerName'))]"
            },
            {
              "name": "letsencrypt:Tenant",
              "value": "[variables('letsEncryptTenant')]"
            },
            {
              "name": "letsencrypt:SubscriptionId",
              "value": "[subscription().subscriptionId]"
            },
            {
              "name": "letsencrypt:ClientId",
              "value": "[variables('letsEncryptClientId')]"
            },
            {
              "name": "letsencrypt:ClientSecret",
              "value": "[variables('letsEncryptClientSecret')]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "letsencrypt",
          "type": "siteextensions",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('functionAppName'))]"
          ],
          "properties": {}
        },
        {
          "apiVersion": "2015-08-01",
          "type": "hostNameBindings",
          "name": "[variables('domain')]",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('functionAppName'))]"
          ],
          "tags": {
            "displayName": "hostNameBinding"
          },
          "properties": {
            "domainId": null,
            "hostNameType": "Verified",
            "siteName": "variables('functionAppName')"
          }
        }
      ]
    }
  ],
  "outputs": {
    "Storage.Account.Name": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "Storage.Container.Name": {
      "type": "string",
      "value": "[variables('blobContainerName')]"
    }
  }
}
